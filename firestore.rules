rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // üöß R√àGLES TEMPORAIRES POUR LE D√âVELOPPEMENT
    // ‚ö†Ô∏è √Ä REMPLACER EN PRODUCTION
    
    // Permettre tout pour les utilisateurs authentifi√©s (temporaire)
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // üìù R√àGLES DE PRODUCTION (√† d√©commenter plus tard) :
    /*
    // R√®gles pour les utilisateurs
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // R√®gles pour les conversations
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      
      // R√®gles pour les messages
      match /messages/{messageId} {
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        allow create: if request.auth != null && 
          request.auth.uid == request.resource.data.senderId &&
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        allow update, delete: if false;
      }
    }
    */
  }
} 